{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport { Table, Button } from 'semantic-ui-react';\nimport web3 from '../ethereum/web3';\nimport Web3 from 'web3';\nimport Campaign from '../ethereum/campaign';\n\nvar RequestRow = /*#__PURE__*/function (_Component) {\n  _inherits(RequestRow, _Component);\n\n  var _super = _createSuper(RequestRow);\n\n  function RequestRow() {\n    var _this;\n\n    _classCallCheck(this, RequestRow);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"onApprove\", /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var web3Provider, campaign, accounts;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!window.ethereum) {\n                _context.next = 13;\n                break;\n              }\n\n              web3Provider = window.ethereum;\n              _context.prev = 2;\n              _context.next = 5;\n              return window.ethereum.enable();\n\n            case 5:\n              console.log('account access success.');\n              _context.next = 11;\n              break;\n\n            case 8:\n              _context.prev = 8;\n              _context.t0 = _context[\"catch\"](2);\n              // 用户不授权时\n              console.error(\"User denied account access\");\n\n            case 11:\n              _context.next = 14;\n              break;\n\n            case 13:\n              // Legacy dapp browsers...\n              if (window.web3) {\n                // 老版本 metamask 账户信息是公开的，2018-11之后，需要授权才能获取账户信息\n                web3Provider = window.web3.currentProvider;\n                console.log('!!!!!!!!!!!!!!!!!');\n              } // Non-dapp browsers...\n              else {\n                  console.log('Non-Ethereum browser detected. You should consider trying MetaMask!');\n                }\n\n            case 14:\n              web3 = new Web3(web3Provider);\n              campaign = Campaign(_this.props.address);\n              _context.next = 18;\n              return web3.eth.getAccounts();\n\n            case 18:\n              accounts = _context.sent;\n              _context.next = 21;\n              return campaign.methods.approvalRequest(_this.props.id).send({\n                from: accounts[0]\n              });\n\n            case 21:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[2, 8]]);\n    })));\n\n    return _this;\n  }\n\n  _createClass(RequestRow, [{\n    key: \"render\",\n    value: function render() {\n      var Row = Table.Row,\n          Cell = Table.Cell;\n      var _this$props = this.props,\n          id = _this$props.id,\n          request = _this$props.request,\n          approversCount = _this$props.approversCount;\n      return __jsx(Row, null, __jsx(Cell, null, id), __jsx(Cell, null, request.description), __jsx(Cell, null, web3.utils.fromWei(request.value, 'ether')), __jsx(Cell, null, request.recipients), __jsx(Cell, null, request.approvalCount, \"/\", approversCount), __jsx(Cell, null, __jsx(Button, {\n        color: \"green\",\n        onClick: this.onApprove\n      }, \"\\u540C\\u610F\")), __jsx(Cell, null, __jsx(Button, {\n        color: \"green\",\n        onClick: this.onFinalize\n      }, \"\\u5B8C\\u6210\")));\n    }\n  }]);\n\n  return RequestRow;\n}(Component);\n\nexport default RequestRow;","map":{"version":3,"sources":["/Users/andy/Downloads/exam3/campaign_contract/components/RequestRow.js"],"names":["React","Component","Table","Button","web3","Web3","Campaign","RequestRow","window","ethereum","web3Provider","enable","console","log","error","currentProvider","campaign","props","address","eth","getAccounts","accounts","methods","approvalRequest","id","send","from","Row","Cell","request","approversCount","description","utils","fromWei","value","recipients","approvalCount","onApprove","onFinalize"],"mappings":";;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B;AACA,SAAQC,KAAR,EAAcC,MAAd,QAA2B,mBAA3B;AAEA,OAAOC,IAAP,MAAiB,kBAAjB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,QAAP,MAAqB,sBAArB;;IAEMC,U;;;;;;;;;;;;;;;;sIAGQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAINC,MAAM,CAACC,QAJD;AAAA;AAAA;AAAA;;AAKNC,cAAAA,YAAY,GAAGF,MAAM,CAACC,QAAtB;AALM;AAAA;AAAA,qBAQID,MAAM,CAACC,QAAP,CAAgBE,MAAhB,EARJ;;AAAA;AASFC,cAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ;AATE;AAAA;;AAAA;AAAA;AAAA;AAWF;AACAD,cAAAA,OAAO,CAACE,KAAR,CAAc,4BAAd;;AAZE;AAAA;AAAA;;AAAA;AAeV;AACK,kBAAIN,MAAM,CAACJ,IAAX,EAAiB;AAAI;AACtBM,gBAAAA,YAAY,GAAGF,MAAM,CAACJ,IAAP,CAAYW,eAA3B;AACAH,gBAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACH,eAHI,CAIL;AAJK,mBAKA;AACDD,kBAAAA,OAAO,CAACC,GAAR,CAAY,qEAAZ;AACH;;AAvBS;AAwBVT,cAAAA,IAAI,GAAG,IAAIC,IAAJ,CAASK,YAAT,CAAP;AAEQM,cAAAA,QA1BE,GA0BSV,QAAQ,CAAC,MAAKW,KAAL,CAAWC,OAAZ,CA1BjB;AAAA;AAAA,qBA2Bed,IAAI,CAACe,GAAL,CAASC,WAAT,EA3Bf;;AAAA;AA2BFC,cAAAA,QA3BE;AAAA;AAAA,qBA4BFL,QAAQ,CAACM,OAAT,CAAiBC,eAAjB,CAAiC,MAAKN,KAAL,CAAWO,EAA5C,EAAgDC,IAAhD,CAAqD;AAACC,gBAAAA,IAAI,EAACL,QAAQ,CAAC,CAAD;AAAd,eAArD,CA5BE;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;;;;;;6BA+BJ;AAAA,UAECM,GAFD,GAEazB,KAFb,CAECyB,GAFD;AAAA,UAEKC,IAFL,GAEa1B,KAFb,CAEK0B,IAFL;AAAA,wBAG8B,KAAKX,KAHnC;AAAA,UAGCO,EAHD,eAGCA,EAHD;AAAA,UAGIK,OAHJ,eAGIA,OAHJ;AAAA,UAGYC,cAHZ,eAGYA,cAHZ;AAKN,aAEE,MAAC,GAAD,QACE,MAAC,IAAD,QAAON,EAAP,CADF,EAEE,MAAC,IAAD,QAAOK,OAAO,CAACE,WAAf,CAFF,EAGE,MAAC,IAAD,QAAO3B,IAAI,CAAC4B,KAAL,CAAWC,OAAX,CAAmBJ,OAAO,CAACK,KAA3B,EAAiC,OAAjC,CAAP,CAHF,EAIE,MAAC,IAAD,QAAOL,OAAO,CAACM,UAAf,CAJF,EAKE,MAAC,IAAD,QAAON,OAAO,CAACO,aAAf,OAA+BN,cAA/B,CALF,EAME,MAAC,IAAD,QACI,MAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,OAAd;AAAsB,QAAA,OAAO,EAAE,KAAKO;AAApC,wBADJ,CANF,EASE,MAAC,IAAD,QACI,MAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,OAAd;AAAsB,QAAA,OAAO,EAAE,KAAKC;AAApC,wBADJ,CATF,CAFF;AAiBD;;;;EAxDsBrC,S;;AA4DzB,eAAeM,UAAf","sourcesContent":["import React,{Component} from 'react';\nimport {Table,Button} from 'semantic-ui-react';\n\nimport web3 from '../ethereum/web3';\nimport Web3 from 'web3';\nimport Campaign from '../ethereum/campaign'\n\nclass RequestRow extends Component {\n\n\n  onApprove = async()=> {\n\n\n    var web3Provider;\n    if (window.ethereum) {\n        web3Provider = window.ethereum;\n        try {\n            // 请求 账户授权\n            await window.ethereum.enable();\n            console.log('account access success.');\n        } catch (error) {\n            // 用户不授权时\n            console.error(\"User denied account access\")\n        }\n    }\n    // Legacy dapp browsers...\n    else if (window.web3) {   // 老版本 metamask 账户信息是公开的，2018-11之后，需要授权才能获取账户信息\n        web3Provider = window.web3.currentProvider;\n        console.log('!!!!!!!!!!!!!!!!!');\n    }\n    // Non-dapp browsers...\n    else {\n        console.log('Non-Ethereum browser detected. You should consider trying MetaMask!');\n    }\n    web3 = new Web3(web3Provider);\n\n      const campaign = Campaign(this.props.address);\n      const accounts = await web3.eth.getAccounts();\n      await campaign.methods.approvalRequest(this.props.id).send({from:accounts[0]});\n  }\n\n  render(){\n\n    const {Row,Cell} = Table;\n    const {id,request,approversCount} = this.props;\n\n    return (\n\n      <Row>\n        <Cell>{id}</Cell>\n        <Cell>{request.description}</Cell>\n        <Cell>{web3.utils.fromWei(request.value,'ether')}</Cell>\n        <Cell>{request.recipients}</Cell>\n        <Cell>{request.approvalCount}/{approversCount}</Cell>\n        <Cell>\n            <Button color='green' onClick={this.onApprove}>同意</Button>\n        </Cell>\n        <Cell>\n            <Button color='green' onClick={this.onFinalize}>完成</Button>\n        </Cell>\n      </Row>\n\n    );\n  }\n\n}\n\nexport default RequestRow;\n"]},"metadata":{},"sourceType":"module"}