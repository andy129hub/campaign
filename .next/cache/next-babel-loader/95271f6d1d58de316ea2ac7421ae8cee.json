{"ast":null,"code":"var _jsxFileName = \"/Users/andy/Downloads/exam3/campaign_contract/pages/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport react, { Component } from 'react';\nimport factory from '../ethereum/factory';\nimport web3 from '../ethereum/web3';\nimport Web3 from 'web3'; // export default()=> {\n//   return <h1>next index页面</h1>;\n// }\n\nclass CampaignIndex extends Component {\n  // 无法使用 window 对象\n  static async getInitialProps() {\n    const address = await factory.options.address;\n    console.log(address); // 请求账户授权，授权完成之后才可以通过  web3.eth.getAccounts() 获取到账户信息\n\n    const accounts = await web3.eth.getAccounts();\n    console.log(accounts);\n    const campaign = await factory.methods.getDeployedCampaign().call();\n    console.log(campaign);\n    return {\n      accounts\n    }; // {} 一定要有\n  }\n\n  async componentDidMount() {\n    if (window.ethereum) {\n      web3Provider = window.ethereum;\n\n      try {\n        // 请求 账户授权\n        await window.ethereum.enable();\n        console.log('account access success.');\n      } catch (error) {\n        // 用户不授权时\n        console.error(\"User denied account access\");\n      }\n    } // Legacy dapp browsers...\n    else if (window.web3) {\n        // 老版本 metamask 账户信息是公开的，2018-11之后，需要授权才能获取账户信息\n        web3Provider = window.web3.currentProvider;\n        console.log('!!!!!!!!!!!!!!!!!');\n      } // Non-dapp browsers...\n      else {\n          console.log('Non-Ethereum browser detected. You should consider trying MetaMask!');\n        }\n\n    console.log('+++++++++++++++++');\n    web3 = new Web3(web3Provider);\n  }\n  /*  当浏览器禁止 javascript 之后，console.log() 不会被执行\n    async componentDidMount() {\n  \n      // 请求 账户授权\n      window.addEventListener('load', async () => {\n        var web3Provider;\n         // Modern dapp browsers...\n         if (window.ethereum) {\n             web3Provider = window.ethereum;\n             try {\n                 // 请求 账户授权\n                 await window.ethereum.enable();\n                 console.log('account access success.');\n             } catch (error) {\n                 // 用户不授权时\n                 console.error(\"User denied account access\")\n             }\n         }\n         // Legacy dapp browsers...\n         else if (window.web3) {   // 老版本 metamask 账户信息是公开的，2018-11之后，需要授权才能获取账户信息\n             web3Provider = window.web3.currentProvider;\n             console.log('!!!!!!!!!!!!!!!!!');\n         }\n         // Non-dapp browsers...\n         else {\n             console.log('Non-Ethereum browser detected. You should consider trying MetaMask!');\n         }\n         console.log('+++++++++++++++++');\n         web3 = new Web3(web3Provider);\n      });\n  \n      const address = await factory.options.address;\n      console.log(address);\n  \n      // 请求账户授权，授权完成之后才可以通过  web3.eth.getAccounts() 获取到账户信息\n      const accounts = await web3.eth.getAccounts();\n      console.log(accounts);\n  \n      const campaign = await factory.methods.getDeployedCampaign().call();\n      console.log(campaign);\n    }\n  */\n  // {this.props.campaign[0]}\n\n\n  render() {\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 12\n      }\n    }, \"hello index: campaign address : \", this.props.accounts[0]);\n  }\n\n} // 导出\n\n\nexport default CampaignIndex;","map":{"version":3,"sources":["/Users/andy/Downloads/exam3/campaign_contract/pages/index.js"],"names":["react","Component","factory","web3","Web3","CampaignIndex","getInitialProps","address","options","console","log","accounts","eth","getAccounts","campaign","methods","getDeployedCampaign","call","componentDidMount","window","ethereum","web3Provider","enable","error","currentProvider","render","props"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B;AACA,OAAOC,OAAP,MAAoB,qBAApB;AACA,OAAOC,IAAP,MAAiB,kBAAjB;AAEA,OAAOC,IAAP,MAAiB,MAAjB,C,CACA;AACA;AACA;;AAEA,MAAMC,aAAN,SAA4BJ,SAA5B,CAAsC;AAGpC;AACA,eAAaK,eAAb,GAA+B;AAK7B,UAAMC,OAAO,GAAG,MAAML,OAAO,CAACM,OAAR,CAAgBD,OAAtC;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAYH,OAAZ,EAN6B,CAQ7B;;AACA,UAAMI,QAAQ,GAAG,MAAMR,IAAI,CAACS,GAAL,CAASC,WAAT,EAAvB;AACAJ,IAAAA,OAAO,CAACC,GAAR,CAAYC,QAAZ;AAEA,UAAMG,QAAQ,GAAG,MAAMZ,OAAO,CAACa,OAAR,CAAgBC,mBAAhB,GAAsCC,IAAtC,EAAvB;AACAR,IAAAA,OAAO,CAACC,GAAR,CAAYI,QAAZ;AAEA,WAAO;AAACH,MAAAA;AAAD,KAAP,CAf6B,CAeR;AACtB;;AAED,QAAMO,iBAAN,GAA0B;AACxB,QAAIC,MAAM,CAACC,QAAX,EAAqB;AACjBC,MAAAA,YAAY,GAAGF,MAAM,CAACC,QAAtB;;AACA,UAAI;AACA;AACA,cAAMD,MAAM,CAACC,QAAP,CAAgBE,MAAhB,EAAN;AACAb,QAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ;AACH,OAJD,CAIE,OAAOa,KAAP,EAAc;AACZ;AACAd,QAAAA,OAAO,CAACc,KAAR,CAAc,4BAAd;AACH;AACJ,KAVD,CAWA;AAXA,SAYK,IAAIJ,MAAM,CAAChB,IAAX,EAAiB;AAAI;AACtBkB,QAAAA,YAAY,GAAGF,MAAM,CAAChB,IAAP,CAAYqB,eAA3B;AACAf,QAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACH,OAHI,CAIL;AAJK,WAKA;AACDD,UAAAA,OAAO,CAACC,GAAR,CAAY,qEAAZ;AACH;;AACDD,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACAP,IAAAA,IAAI,GAAG,IAAIC,IAAJ,CAASiB,YAAT,CAAP;AACD;AAGH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2CE;;;AACAI,EAAAA,MAAM,GAAG;AACP,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAAsC,KAAKC,KAAL,CAAWf,QAAX,CAAoB,CAApB,CAAtC,CAAP;AACD;;AA9FmC,C,CAgGtC;;;AACA,eAAeN,aAAf","sourcesContent":["import react,{Component} from 'react';\nimport factory from '../ethereum/factory';\nimport web3 from '../ethereum/web3';\n\nimport Web3 from 'web3';\n// export default()=> {\n//   return <h1>next index页面</h1>;\n// }\n\nclass CampaignIndex extends Component {\n\n\n  // 无法使用 window 对象\n  static async getInitialProps() {\n\n\n\n\n    const address = await factory.options.address;\n    console.log(address);\n\n    // 请求账户授权，授权完成之后才可以通过  web3.eth.getAccounts() 获取到账户信息\n    const accounts = await web3.eth.getAccounts();\n    console.log(accounts);\n\n    const campaign = await factory.methods.getDeployedCampaign().call();\n    console.log(campaign);\n\n    return {accounts};   // {} 一定要有\n  }\n\n  async componentDidMount() {\n    if (window.ethereum) {\n        web3Provider = window.ethereum;\n        try {\n            // 请求 账户授权\n            await window.ethereum.enable();\n            console.log('account access success.');\n        } catch (error) {\n            // 用户不授权时\n            console.error(\"User denied account access\")\n        }\n    }\n    // Legacy dapp browsers...\n    else if (window.web3) {   // 老版本 metamask 账户信息是公开的，2018-11之后，需要授权才能获取账户信息\n        web3Provider = window.web3.currentProvider;\n        console.log('!!!!!!!!!!!!!!!!!');\n    }\n    // Non-dapp browsers...\n    else {\n        console.log('Non-Ethereum browser detected. You should consider trying MetaMask!');\n    }\n    console.log('+++++++++++++++++');\n    web3 = new Web3(web3Provider);\n  }\n\n\n/*  当浏览器禁止 javascript 之后，console.log() 不会被执行\n  async componentDidMount() {\n\n    // 请求 账户授权\n    window.addEventListener('load', async () => {\n      var web3Provider;\n       // Modern dapp browsers...\n       if (window.ethereum) {\n           web3Provider = window.ethereum;\n           try {\n               // 请求 账户授权\n               await window.ethereum.enable();\n               console.log('account access success.');\n           } catch (error) {\n               // 用户不授权时\n               console.error(\"User denied account access\")\n           }\n       }\n       // Legacy dapp browsers...\n       else if (window.web3) {   // 老版本 metamask 账户信息是公开的，2018-11之后，需要授权才能获取账户信息\n           web3Provider = window.web3.currentProvider;\n           console.log('!!!!!!!!!!!!!!!!!');\n       }\n       // Non-dapp browsers...\n       else {\n           console.log('Non-Ethereum browser detected. You should consider trying MetaMask!');\n       }\n       console.log('+++++++++++++++++');\n       web3 = new Web3(web3Provider);\n    });\n\n    const address = await factory.options.address;\n    console.log(address);\n\n    // 请求账户授权，授权完成之后才可以通过  web3.eth.getAccounts() 获取到账户信息\n    const accounts = await web3.eth.getAccounts();\n    console.log(accounts);\n\n    const campaign = await factory.methods.getDeployedCampaign().call();\n    console.log(campaign);\n  }\n*/\n\n  // {this.props.campaign[0]}\n  render() {\n    return <div>hello index: campaign address : {this.props.accounts[0]}</div>;\n  }\n}\n// 导出\nexport default CampaignIndex;\n"]},"metadata":{},"sourceType":"module"}