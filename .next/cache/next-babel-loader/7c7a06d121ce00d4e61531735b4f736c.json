{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport factory from '../ethereum/factory';\nimport { Card, Button } from 'semantic-ui-react';\nimport Layout from '../components/Layout';\nimport web3 from '../ethereum/web3';\nimport Web3 from 'web3'; // export default()=> {\n//   return <h1>next index页面</h1>;\n// }\n\nclass CampaignIndex extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      account: '',\n      address: ''\n    });\n  }\n\n  async componentDidMount() {\n    console.log(\"0000000000\", this.state.address);\n  }\n\n  static async getAddress(index) {\n    console.log(\"index : \", index);\n    address = await factory.methods.deployedCampaign(index).call();\n    return {\n      address\n    };\n  } // next 框架中预处理函数(在服务器端预处理，返回结果，供前端调用)\n  // 缺点：无法使用 window 对象\n  // 注意：console.log() 既然是 服务器端处理，所以打印信息是在服务器端的 终端窗口，而不是 浏览器终端\n\n\n  static async getInitialProps() {\n    // const address = await factory.options.address;\n    // console.log(address);\n    const campaigns = await factory.methods.getDeployedCampaign().call();\n    console.log(campaigns);\n    const camDesc = await Promise.all(Array(campaigns.length).fill().map((element, index) => {\n      this.getAddress(index); // console.log(\"--------\",this.state.address);\n\n      return factory.methods.campaignMap(\"0x98fFC345da842d88134C29A5400fd85De438Bb55\").call();\n    }));\n    /*\n    const campaigns = await Promise.all (\n      Array(campaignsCount).fill().map((element,index)=>{\n        return factory.methods.deployedCampaign(index).call();\n      })\n    )\n    console.log(campaigns);\n    */\n\n    return {\n      camDesc,\n      campaigns\n    }; // {} 一定要有\n  } // 既然在服务器端无法获取 以太坊账户信息，那么依然可以使用 componentDidMount() 在里面使用 window对象 请求账户授权\n  // 缺点，一旦 浏览器禁止了 javascript, 那么该方法就无法使用了\n\n  /*\n  async componentDidMount() {\n     var web3Provider;\n    if (window.ethereum) {\n        web3Provider = window.ethereum;\n        try {\n            // 请求 账户授权\n            await window.ethereum.enable();\n            console.log('account access success.');\n        } catch (error) {\n            // 用户不授权时\n            console.error(\"User denied account access\")\n        }\n    }\n    // Legacy dapp browsers...\n    else if (window.web3) {   // 老版本 metamask 账户信息是公开的，2018-11之后，需要授权才能获取账户信息\n        web3Provider = window.web3.currentProvider;\n        console.log('!!!!!!!!!!!!!!!!!');\n    }\n    // Non-dapp browsers...\n    else {\n        console.log('Non-Ethereum browser detected. You should consider trying MetaMask!');\n    }\n    console.log('+++++++++++++++++');\n    web3 = new Web3(web3Provider);\n     // 请求账户授权，授权完成之后才可以通过  web3.eth.getAccounts() 获取到账户信息\n    const accounts = await web3.eth.getAccounts();\n    console.log(accounts);\n     this.setState({account:accounts[0]});\n  }\n  */\n\n  /*  当浏览器禁止 javascript 之后，console.log() 不会被执行\n    async componentDidMount() {\n  \n      // 请求 账户授权\n      window.addEventListener('load', async () => {\n        var web3Provider;\n         // Modern dapp browsers...\n         if (window.ethereum) {\n             web3Provider = window.ethereum;\n             try {\n                 // 请求 账户授权\n                 await window.ethereum.enable();\n                 console.log('account access success.');\n             } catch (error) {\n                 // 用户不授权时\n                 console.error(\"User denied account access\")\n             }\n         }\n         // Legacy dapp browsers...\n         else if (window.web3) {   // 老版本 metamask 账户信息是公开的，2018-11之后，需要授权才能获取账户信息\n             web3Provider = window.web3.currentProvider;\n             console.log('!!!!!!!!!!!!!!!!!');\n         }\n         // Non-dapp browsers...\n         else {\n             console.log('Non-Ethereum browser detected. You should consider trying MetaMask!');\n         }\n         console.log('+++++++++++++++++');\n         web3 = new Web3(web3Provider);\n      });\n  \n      const address = await factory.options.address;\n      console.log(address);\n  \n      // 请求账户授权，授权完成之后才可以通过  web3.eth.getAccounts() 获取到账户信息\n      const accounts = await web3.eth.getAccounts();\n      console.log(accounts);\n  \n      const campaign = await factory.methods.getDeployedCampaign().call();\n      console.log(campaign);\n    }\n  */\n\n\n  renderCampaigns() {\n    if (this.props.campaigns.length > 0) {\n      const items = this.props.campaigns.map((address, index) => {\n        return {\n          header: address,\n          description: `{this.props.camDesc}`,\n          meta: __jsx(\"a\", null, \"\\u67E5\\u770B\\u4F17\\u7B79\"),\n          fluid: true\n        };\n      });\n      return __jsx(Card.Group, {\n        items: items\n      });\n    } else {\n      console.log(\"no campaign\");\n      const items = [{\n        header: '无众筹项目'\n      }];\n      return __jsx(Card.Group, {\n        items: items\n      });\n    }\n  }\n\n  render() {\n    return __jsx(Layout, null, __jsx(\"div\", null, __jsx(\"h3\", null, \"\\u4F17\\u7B79\\u5217\\u8868\"), __jsx(Button, {\n      floated: \"right\",\n      content: \"\\u521B\\u5EFA\\u4F17\\u7B79\",\n      icon: \"add circle\",\n      labelPosition: \"left\",\n      primary: true\n    }), this.renderCampaigns()));\n  }\n\n} // 导出\n\n\nexport default CampaignIndex;","map":{"version":3,"sources":["/Users/andy/Downloads/exam3/campaign_contract/pages/index.js"],"names":["React","Component","factory","Card","Button","Layout","web3","Web3","CampaignIndex","account","address","componentDidMount","console","log","state","getAddress","index","methods","deployedCampaign","call","getInitialProps","campaigns","getDeployedCampaign","camDesc","Promise","all","Array","length","fill","map","element","campaignMap","renderCampaigns","props","items","header","description","meta","fluid","render"],"mappings":"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","sourcesContent":["import React,{Component} from 'react';\nimport factory from '../ethereum/factory';\nimport {Card,Button} from 'semantic-ui-react';\n\nimport Layout from '../components/Layout';\nimport web3 from '../ethereum/web3';\n\nimport Web3 from 'web3';\n// export default()=> {\n//   return <h1>next index页面</h1>;\n// }\n\n\nclass CampaignIndex extends Component {\n\n  state = {\n    account:'',\n    address:'',\n  }\n\n  async componentDidMount() {\n\n      console.log(\"0000000000\", this.state.address);\n\n  }\n\n  static async getAddress(index) {\n    console.log(\"index : \",index);\n    address = await factory.methods.deployedCampaign(index).call();\n    return {address};\n  }\n\n  // next 框架中预处理函数(在服务器端预处理，返回结果，供前端调用)\n  // 缺点：无法使用 window 对象\n  // 注意：console.log() 既然是 服务器端处理，所以打印信息是在服务器端的 终端窗口，而不是 浏览器终端\n  static async getInitialProps() {\n\n    // const address = await factory.options.address;\n    // console.log(address);\n\n    const campaigns = await factory.methods.getDeployedCampaign().call();\n    console.log(campaigns);\n\n    const camDesc = await Promise.all (\n        Array(campaigns.length).fill().map((element,index)=>{\n        this.getAddress(index);\n\n        // console.log(\"--------\",this.state.address);\n\n        return factory.methods.campaignMap(\"0x98fFC345da842d88134C29A5400fd85De438Bb55\").call();\n      })\n    )\n\n    /*\n    const campaigns = await Promise.all (\n      Array(campaignsCount).fill().map((element,index)=>{\n        return factory.methods.deployedCampaign(index).call();\n      })\n    )\n    console.log(campaigns);\n    */\n\n    return {camDesc, campaigns};   // {} 一定要有\n\n  }\n\n  // 既然在服务器端无法获取 以太坊账户信息，那么依然可以使用 componentDidMount() 在里面使用 window对象 请求账户授权\n  // 缺点，一旦 浏览器禁止了 javascript, 那么该方法就无法使用了\n  /*\n  async componentDidMount() {\n\n    var web3Provider;\n    if (window.ethereum) {\n        web3Provider = window.ethereum;\n        try {\n            // 请求 账户授权\n            await window.ethereum.enable();\n            console.log('account access success.');\n        } catch (error) {\n            // 用户不授权时\n            console.error(\"User denied account access\")\n        }\n    }\n    // Legacy dapp browsers...\n    else if (window.web3) {   // 老版本 metamask 账户信息是公开的，2018-11之后，需要授权才能获取账户信息\n        web3Provider = window.web3.currentProvider;\n        console.log('!!!!!!!!!!!!!!!!!');\n    }\n    // Non-dapp browsers...\n    else {\n        console.log('Non-Ethereum browser detected. You should consider trying MetaMask!');\n    }\n    console.log('+++++++++++++++++');\n    web3 = new Web3(web3Provider);\n\n    // 请求账户授权，授权完成之后才可以通过  web3.eth.getAccounts() 获取到账户信息\n    const accounts = await web3.eth.getAccounts();\n    console.log(accounts);\n\n    this.setState({account:accounts[0]});\n  }\n  */\n\n\n/*  当浏览器禁止 javascript 之后，console.log() 不会被执行\n  async componentDidMount() {\n\n    // 请求 账户授权\n    window.addEventListener('load', async () => {\n      var web3Provider;\n       // Modern dapp browsers...\n       if (window.ethereum) {\n           web3Provider = window.ethereum;\n           try {\n               // 请求 账户授权\n               await window.ethereum.enable();\n               console.log('account access success.');\n           } catch (error) {\n               // 用户不授权时\n               console.error(\"User denied account access\")\n           }\n       }\n       // Legacy dapp browsers...\n       else if (window.web3) {   // 老版本 metamask 账户信息是公开的，2018-11之后，需要授权才能获取账户信息\n           web3Provider = window.web3.currentProvider;\n           console.log('!!!!!!!!!!!!!!!!!');\n       }\n       // Non-dapp browsers...\n       else {\n           console.log('Non-Ethereum browser detected. You should consider trying MetaMask!');\n       }\n       console.log('+++++++++++++++++');\n       web3 = new Web3(web3Provider);\n    });\n\n    const address = await factory.options.address;\n    console.log(address);\n\n    // 请求账户授权，授权完成之后才可以通过  web3.eth.getAccounts() 获取到账户信息\n    const accounts = await web3.eth.getAccounts();\n    console.log(accounts);\n\n    const campaign = await factory.methods.getDeployedCampaign().call();\n    console.log(campaign);\n  }\n*/\n\n  renderCampaigns(){\n    if (this.props.campaigns.length > 0 ){\n      const items = this.props.campaigns.map((address,index)=>{\n\n        return {\n          header: address,\n          description :`{this.props.camDesc}`,\n          meta: <a>查看众筹</a>,\n          fluid:true\n        }\n      });\n      return <Card.Group items={items} />;\n    }else {\n      console.log(\"no campaign\");\n      const items = [\n        {\n          header: '无众筹项目',\n        },\n      ]\n      return <Card.Group items={items} />;\n    }\n\n  }\n\n  render() {\n    return (\n      <Layout>\n      <div>\n        <h3>众筹列表</h3>\n        <Button floated='right' content='创建众筹' icon='add circle' labelPosition='left' primary/>\n        {this.renderCampaigns()}\n      </div>\n      </Layout>\n    );\n  }\n}\n// 导出\nexport default CampaignIndex;\n"]},"metadata":{},"sourceType":"module"}