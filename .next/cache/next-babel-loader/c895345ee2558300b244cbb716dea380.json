{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport { Table, Button } from 'semantic-ui-react';\nimport web3 from '../ethereum/web3';\nimport Web3 from 'web3';\nimport Campaign from '../ethereum/campaign';\n\nclass RequestRow extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"onApprove\", async () => {\n      var web3Provider;\n\n      if (window.ethereum) {\n        web3Provider = window.ethereum;\n\n        try {\n          // 请求 账户授权\n          await window.ethereum.enable();\n          console.log('account access success.');\n        } catch (error) {\n          // 用户不授权时\n          console.error(\"User denied account access\");\n        }\n      } // Legacy dapp browsers...\n      else if (window.web3) {\n          // 老版本 metamask 账户信息是公开的，2018-11之后，需要授权才能获取账户信息\n          web3Provider = window.web3.currentProvider;\n          console.log('!!!!!!!!!!!!!!!!!');\n        } // Non-dapp browsers...\n        else {\n            console.log('Non-Ethereum browser detected. You should consider trying MetaMask!');\n          }\n\n      web3 = new Web3(web3Provider);\n      const campaign = Campaign(this.props.address);\n      const accounts = await web3.eth.getAccounts();\n      await campaign.methods.approvalRequest(this.props.id).send({\n        from: accounts[0]\n      });\n    });\n  }\n\n  render() {\n    const {\n      Row,\n      Cell\n    } = Table;\n    const {\n      id,\n      request,\n      approversCount\n    } = this.props;\n    return __jsx(Row, null, __jsx(Cell, null, id), __jsx(Cell, null, request.description), __jsx(Cell, null, web3.utils.fromWei(request.value, 'ether')), __jsx(Cell, null, request.recipients), __jsx(Cell, null, request.approvalCount, \"/\", approversCount), __jsx(Cell, null, __jsx(Button, {\n      color: \"green\",\n      onClick: this.onApprove\n    }, \"\\u540C\\u610F\")), __jsx(Cell, null, __jsx(Button, {\n      color: \"green\",\n      onClick: this.onApprove\n    }, \"\\u5B8C\\u6210\")));\n  }\n\n}\n\nexport default RequestRow;","map":{"version":3,"sources":["/Users/andy/Downloads/exam3/campaign_contract/components/RequestRow.js"],"names":["React","Component","Table","Button","web3","Web3","Campaign","RequestRow","web3Provider","window","ethereum","enable","console","log","error","currentProvider","campaign","props","address","accounts","eth","getAccounts","methods","approvalRequest","id","send","from","render","Row","Cell","request","approversCount","description","utils","fromWei","value","recipients","approvalCount","onApprove"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B;AACA,SAAQC,KAAR,EAAcC,MAAd,QAA2B,mBAA3B;AAEA,OAAOC,IAAP,MAAiB,kBAAjB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,QAAP,MAAqB,sBAArB;;AAEA,MAAMC,UAAN,SAAyBN,SAAzB,CAAmC;AAAA;AAAA;;AAAA,uCAGrB,YAAU;AAGpB,UAAIO,YAAJ;;AACA,UAAIC,MAAM,CAACC,QAAX,EAAqB;AACjBF,QAAAA,YAAY,GAAGC,MAAM,CAACC,QAAtB;;AACA,YAAI;AACA;AACA,gBAAMD,MAAM,CAACC,QAAP,CAAgBC,MAAhB,EAAN;AACAC,UAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ;AACH,SAJD,CAIE,OAAOC,KAAP,EAAc;AACZ;AACAF,UAAAA,OAAO,CAACE,KAAR,CAAc,4BAAd;AACH;AACJ,OAVD,CAWA;AAXA,WAYK,IAAIL,MAAM,CAACL,IAAX,EAAiB;AAAI;AACtBI,UAAAA,YAAY,GAAGC,MAAM,CAACL,IAAP,CAAYW,eAA3B;AACAH,UAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACH,SAHI,CAIL;AAJK,aAKA;AACDD,YAAAA,OAAO,CAACC,GAAR,CAAY,qEAAZ;AACH;;AACDT,MAAAA,IAAI,GAAG,IAAIC,IAAJ,CAASG,YAAT,CAAP;AAEE,YAAMQ,QAAQ,GAAGV,QAAQ,CAAC,KAAKW,KAAL,CAAWC,OAAZ,CAAzB;AACA,YAAMC,QAAQ,GAAG,MAAMf,IAAI,CAACgB,GAAL,CAASC,WAAT,EAAvB;AACA,YAAML,QAAQ,CAACM,OAAT,CAAiBC,eAAjB,CAAiC,KAAKN,KAAL,CAAWO,EAA5C,EAAgDC,IAAhD,CAAqD;AAACC,QAAAA,IAAI,EAACP,QAAQ,CAAC,CAAD;AAAd,OAArD,CAAN;AACH,KAhCgC;AAAA;;AAkCjCQ,EAAAA,MAAM,GAAE;AAEN,UAAM;AAACC,MAAAA,GAAD;AAAKC,MAAAA;AAAL,QAAa3B,KAAnB;AACA,UAAM;AAACsB,MAAAA,EAAD;AAAIM,MAAAA,OAAJ;AAAYC,MAAAA;AAAZ,QAA8B,KAAKd,KAAzC;AAEA,WAEE,MAAC,GAAD,QACE,MAAC,IAAD,QAAOO,EAAP,CADF,EAEE,MAAC,IAAD,QAAOM,OAAO,CAACE,WAAf,CAFF,EAGE,MAAC,IAAD,QAAO5B,IAAI,CAAC6B,KAAL,CAAWC,OAAX,CAAmBJ,OAAO,CAACK,KAA3B,EAAiC,OAAjC,CAAP,CAHF,EAIE,MAAC,IAAD,QAAOL,OAAO,CAACM,UAAf,CAJF,EAKE,MAAC,IAAD,QAAON,OAAO,CAACO,aAAf,OAA+BN,cAA/B,CALF,EAME,MAAC,IAAD,QACI,MAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,OAAd;AAAsB,MAAA,OAAO,EAAE,KAAKO;AAApC,sBADJ,CANF,EASE,MAAC,IAAD,QACI,MAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,OAAd;AAAsB,MAAA,OAAO,EAAE,KAAKA;AAApC,sBADJ,CATF,CAFF;AAiBD;;AAxDgC;;AA4DnC,eAAe/B,UAAf","sourcesContent":["import React,{Component} from 'react';\nimport {Table,Button} from 'semantic-ui-react';\n\nimport web3 from '../ethereum/web3';\nimport Web3 from 'web3';\nimport Campaign from '../ethereum/campaign'\n\nclass RequestRow extends Component {\n\n\n  onApprove = async()=> {\n\n\n    var web3Provider;\n    if (window.ethereum) {\n        web3Provider = window.ethereum;\n        try {\n            // 请求 账户授权\n            await window.ethereum.enable();\n            console.log('account access success.');\n        } catch (error) {\n            // 用户不授权时\n            console.error(\"User denied account access\")\n        }\n    }\n    // Legacy dapp browsers...\n    else if (window.web3) {   // 老版本 metamask 账户信息是公开的，2018-11之后，需要授权才能获取账户信息\n        web3Provider = window.web3.currentProvider;\n        console.log('!!!!!!!!!!!!!!!!!');\n    }\n    // Non-dapp browsers...\n    else {\n        console.log('Non-Ethereum browser detected. You should consider trying MetaMask!');\n    }\n    web3 = new Web3(web3Provider);\n\n      const campaign = Campaign(this.props.address);\n      const accounts = await web3.eth.getAccounts();\n      await campaign.methods.approvalRequest(this.props.id).send({from:accounts[0]});\n  }\n\n  render(){\n\n    const {Row,Cell} = Table;\n    const {id,request,approversCount} = this.props;\n\n    return (\n\n      <Row>\n        <Cell>{id}</Cell>\n        <Cell>{request.description}</Cell>\n        <Cell>{web3.utils.fromWei(request.value,'ether')}</Cell>\n        <Cell>{request.recipients}</Cell>\n        <Cell>{request.approvalCount}/{approversCount}</Cell>\n        <Cell>\n            <Button color='green' onClick={this.onApprove}>同意</Button>\n        </Cell>\n        <Cell>\n            <Button color='green' onClick={this.onApprove}>完成</Button>\n        </Cell>\n      </Row>\n\n    );\n  }\n\n}\n\nexport default RequestRow;\n"]},"metadata":{},"sourceType":"module"}