{"ast":null,"code":"var _jsxFileName = \"/Users/andy/Downloads/exam3/campaign_contract/pages/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport react, { Component } from 'react';\nimport factory from '../ethereum/factory';\nimport web3 from '../ethereum/web3';\nimport Web3 from 'web3'; // export default()=> {\n//   return <h1>next index页面</h1>;\n// }\n\nclass CampaignIndex extends Component {\n  // 请求 账户授权 （授权后才能读取 metamask 账户的信息）\n  async verify() {\n    var web3Provider; // Modern dapp browsers...\n\n    if (window.ethereum) {\n      web3Provider = window.ethereum;\n\n      try {\n        // 请求 账户授权\n        await window.ethereum.enable();\n        console.log('account access success.');\n      } catch (error) {\n        // 用户不授权时\n        console.error(\"User denied account access\");\n      }\n    } // Legacy dapp browsers...\n    else if (window.web3) {\n        // 老版本 metamask 账户信息是公开的，2018-11之后，需要授权才能获取账户信息\n        web3Provider = window.web3.currentProvider;\n        console.log('!!!!!!!!!!!!!!!!!');\n      } // Non-dapp browsers...\n      else {\n          console.log('Non-Ethereum browser detected. You should consider trying MetaMask!');\n        }\n\n    console.log('+++++++++++++++++');\n    web3 = new Web3(web3Provider);\n  }\n\n  async componentDidMount() {\n    // 请求 账户授权\n    window.addEventListener('load', verify());\n    const address = await factory.options.address;\n    console.log(address);\n    const accounts = await web3.eth.getAccounts();\n    console.log(accounts);\n    const campaign = await factory.methods.getDeployedCampaign().call();\n    console.log(campaign);\n  }\n\n  render() {\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 12\n      }\n    }, \"hello index \");\n  }\n\n} // 导出\n\n\nexport default CampaignIndex;","map":{"version":3,"sources":["/Users/andy/Downloads/exam3/campaign_contract/pages/index.js"],"names":["react","Component","factory","web3","Web3","CampaignIndex","verify","web3Provider","window","ethereum","enable","console","log","error","currentProvider","componentDidMount","addEventListener","address","options","accounts","eth","getAccounts","campaign","methods","getDeployedCampaign","call","render"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B;AACA,OAAOC,OAAP,MAAoB,qBAApB;AACA,OAAOC,IAAP,MAAiB,kBAAjB;AAEA,OAAOC,IAAP,MAAiB,MAAjB,C,CACA;AACA;AACA;;AAEA,MAAMC,aAAN,SAA4BJ,SAA5B,CAAsC;AAEpC;AACA,QAAMK,MAAN,GAAc;AAEZ,QAAIC,YAAJ,CAFY,CAGX;;AACA,QAAIC,MAAM,CAACC,QAAX,EAAqB;AACjBF,MAAAA,YAAY,GAAGC,MAAM,CAACC,QAAtB;;AACA,UAAI;AACA;AACA,cAAMD,MAAM,CAACC,QAAP,CAAgBC,MAAhB,EAAN;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ;AACH,OAJD,CAIE,OAAOC,KAAP,EAAc;AACZ;AACAF,QAAAA,OAAO,CAACE,KAAR,CAAc,4BAAd;AACH;AACJ,KAVD,CAWA;AAXA,SAYK,IAAIL,MAAM,CAACL,IAAX,EAAiB;AAAI;AACtBI,QAAAA,YAAY,GAAGC,MAAM,CAACL,IAAP,CAAYW,eAA3B;AACAH,QAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACH,OAHI,CAIL;AAJK,WAKA;AACDD,UAAAA,OAAO,CAACC,GAAR,CAAY,qEAAZ;AACH;;AACDD,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACAT,IAAAA,IAAI,GAAG,IAAIC,IAAJ,CAASG,YAAT,CAAP;AACF;;AAED,QAAMQ,iBAAN,GAA0B;AAExB;AACAP,IAAAA,MAAM,CAACQ,gBAAP,CAAwB,MAAxB,EAAgCV,MAAM,EAAtC;AAEA,UAAMW,OAAO,GAAG,MAAMf,OAAO,CAACgB,OAAR,CAAgBD,OAAtC;AACAN,IAAAA,OAAO,CAACC,GAAR,CAAYK,OAAZ;AAEA,UAAME,QAAQ,GAAG,MAAMhB,IAAI,CAACiB,GAAL,CAASC,WAAT,EAAvB;AACAV,IAAAA,OAAO,CAACC,GAAR,CAAYO,QAAZ;AAEA,UAAMG,QAAQ,GAAG,MAAMpB,OAAO,CAACqB,OAAR,CAAgBC,mBAAhB,GAAsCC,IAAtC,EAAvB;AACAd,IAAAA,OAAO,CAACC,GAAR,CAAYU,QAAZ;AACD;;AAEDI,EAAAA,MAAM,GAAG;AACP,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAP;AACD;;AAhDmC,C,CAkDtC;;;AACA,eAAerB,aAAf","sourcesContent":["import react,{Component} from 'react';\nimport factory from '../ethereum/factory';\nimport web3 from '../ethereum/web3';\n\nimport Web3 from 'web3';\n// export default()=> {\n//   return <h1>next index页面</h1>;\n// }\n\nclass CampaignIndex extends Component {\n\n  // 请求 账户授权 （授权后才能读取 metamask 账户的信息）\n  async verify(){\n\n    var web3Provider;\n     // Modern dapp browsers...\n     if (window.ethereum) {\n         web3Provider = window.ethereum;\n         try {\n             // 请求 账户授权\n             await window.ethereum.enable();\n             console.log('account access success.');\n         } catch (error) {\n             // 用户不授权时\n             console.error(\"User denied account access\")\n         }\n     }\n     // Legacy dapp browsers...\n     else if (window.web3) {   // 老版本 metamask 账户信息是公开的，2018-11之后，需要授权才能获取账户信息\n         web3Provider = window.web3.currentProvider;\n         console.log('!!!!!!!!!!!!!!!!!');\n     }\n     // Non-dapp browsers...\n     else {\n         console.log('Non-Ethereum browser detected. You should consider trying MetaMask!');\n     }\n     console.log('+++++++++++++++++');\n     web3 = new Web3(web3Provider);\n  }\n\n  async componentDidMount() {\n\n    // 请求 账户授权\n    window.addEventListener('load', verify());\n\n    const address = await factory.options.address;\n    console.log(address);\n\n    const accounts = await web3.eth.getAccounts();\n    console.log(accounts);\n\n    const campaign = await factory.methods.getDeployedCampaign().call();\n    console.log(campaign);\n  }\n\n  render() {\n    return <div>hello index </div>;\n  }\n}\n// 导出\nexport default CampaignIndex;\n"]},"metadata":{},"sourceType":"module"}