{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"/Users/andy/Downloads/exam3/campaign_contract/pages/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport react, { Component } from 'react';\nimport factory from '../ethereum/factory';\nimport web3 from '../ethereum/web3';\nimport Web3 from 'web3'; // export default()=> {\n//   return <h1>next index页面</h1>;\n// }\n\nvar CampaignIndex = /*#__PURE__*/function (_Component) {\n  _inherits(CampaignIndex, _Component);\n\n  var _super = _createSuper(CampaignIndex);\n\n  function CampaignIndex() {\n    _classCallCheck(this, CampaignIndex);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(CampaignIndex, [{\n    key: \"verify\",\n    // 请求 账户授权 （授权后才能读取 metamask 账户的信息）\n    value: function () {\n      var _verify = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var web3Provider;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!window.ethereum) {\n                  _context.next = 13;\n                  break;\n                }\n\n                web3Provider = window.ethereum;\n                _context.prev = 2;\n                _context.next = 5;\n                return window.ethereum.enable();\n\n              case 5:\n                console.log('account access success.');\n                _context.next = 11;\n                break;\n\n              case 8:\n                _context.prev = 8;\n                _context.t0 = _context[\"catch\"](2);\n                // 用户不授权时\n                console.error(\"User denied account access\");\n\n              case 11:\n                _context.next = 14;\n                break;\n\n              case 13:\n                // Legacy dapp browsers...\n                if (window.web3) {\n                  // 老版本 metamask 账户信息是公开的，2018-11之后，需要授权才能获取账户信息\n                  web3Provider = window.web3.currentProvider;\n                  console.log('!!!!!!!!!!!!!!!!!');\n                } // Non-dapp browsers...\n                else {\n                    console.log('Non-Ethereum browser detected. You should consider trying MetaMask!');\n                  }\n\n              case 14:\n                console.log('+++++++++++++++++');\n                web3 = new Web3(web3Provider);\n\n              case 16:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[2, 8]]);\n      }));\n\n      function verify() {\n        return _verify.apply(this, arguments);\n      }\n\n      return verify;\n    }()\n  }, {\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var address, accounts, campaign;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                // 请求 账户授权\n                window.addEventListener('load', verify);\n                _context2.next = 3;\n                return factory.options.address;\n\n              case 3:\n                address = _context2.sent;\n                console.log(address);\n                _context2.next = 7;\n                return web3.eth.getAccounts();\n\n              case 7:\n                accounts = _context2.sent;\n                console.log(accounts);\n                _context2.next = 11;\n                return factory.methods.getDeployedCampaign().call();\n\n              case 11:\n                campaign = _context2.sent;\n                console.log(campaign);\n\n              case 13:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 12\n        }\n      }, \"hello index \");\n    }\n  }]);\n\n  return CampaignIndex;\n}(Component); // 导出\n\n\nexport default CampaignIndex;","map":{"version":3,"sources":["/Users/andy/Downloads/exam3/campaign_contract/pages/index.js"],"names":["react","Component","factory","web3","Web3","CampaignIndex","window","ethereum","web3Provider","enable","console","log","error","currentProvider","addEventListener","verify","options","address","eth","getAccounts","accounts","methods","getDeployedCampaign","call","campaign"],"mappings":";;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B;AACA,OAAOC,OAAP,MAAoB,qBAApB;AACA,OAAOC,IAAP,MAAiB,kBAAjB;AAEA,OAAOC,IAAP,MAAiB,MAAjB,C,CACA;AACA;AACA;;IAEMC,a;;;;;;;;;;;;;AAEJ;;;;;;;;qBAKOC,MAAM,CAACC,Q;;;;;AACPC,gBAAAA,YAAY,GAAGF,MAAM,CAACC,QAAtB;;;uBAGUD,MAAM,CAACC,QAAP,CAAgBE,MAAhB,E;;;AACNC,gBAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ;;;;;;;AAEA;AACAD,gBAAAA,OAAO,CAACE,KAAR,CAAc,4BAAd;;;;;;;AAGR;AACK,oBAAIN,MAAM,CAACH,IAAX,EAAiB;AAAI;AACtBK,kBAAAA,YAAY,GAAGF,MAAM,CAACH,IAAP,CAAYU,eAA3B;AACAH,kBAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACH,iBAHI,CAIL;AAJK,qBAKA;AACDD,oBAAAA,OAAO,CAACC,GAAR,CAAY,qEAAZ;AACH;;;AACDD,gBAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACAR,gBAAAA,IAAI,GAAG,IAAIC,IAAJ,CAASI,YAAT,CAAP;;;;;;;;;;;;;;;;;;;;;;;;;AAKD;AACAF,gBAAAA,MAAM,CAACQ,gBAAP,CAAwB,MAAxB,EAAgCC,MAAhC;;uBAEsBb,OAAO,CAACc,OAAR,CAAgBC,O;;;AAAhCA,gBAAAA,O;AACNP,gBAAAA,OAAO,CAACC,GAAR,CAAYM,OAAZ;;uBAEuBd,IAAI,CAACe,GAAL,CAASC,WAAT,E;;;AAAjBC,gBAAAA,Q;AACNV,gBAAAA,OAAO,CAACC,GAAR,CAAYS,QAAZ;;uBAEuBlB,OAAO,CAACmB,OAAR,CAAgBC,mBAAhB,GAAsCC,IAAtC,E;;;AAAjBC,gBAAAA,Q;AACNd,gBAAAA,OAAO,CAACC,GAAR,CAAYa,QAAZ;;;;;;;;;;;;;;;;;;6BAGO;AACP,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAP;AACD;;;;EAhDyBvB,S,GAkD5B;;;AACA,eAAeI,aAAf","sourcesContent":["import react,{Component} from 'react';\nimport factory from '../ethereum/factory';\nimport web3 from '../ethereum/web3';\n\nimport Web3 from 'web3';\n// export default()=> {\n//   return <h1>next index页面</h1>;\n// }\n\nclass CampaignIndex extends Component {\n\n  // 请求 账户授权 （授权后才能读取 metamask 账户的信息）\n  async verify(){\n\n    var web3Provider;\n     // Modern dapp browsers...\n     if (window.ethereum) {\n         web3Provider = window.ethereum;\n         try {\n             // 请求 账户授权\n             await window.ethereum.enable();\n             console.log('account access success.');\n         } catch (error) {\n             // 用户不授权时\n             console.error(\"User denied account access\")\n         }\n     }\n     // Legacy dapp browsers...\n     else if (window.web3) {   // 老版本 metamask 账户信息是公开的，2018-11之后，需要授权才能获取账户信息\n         web3Provider = window.web3.currentProvider;\n         console.log('!!!!!!!!!!!!!!!!!');\n     }\n     // Non-dapp browsers...\n     else {\n         console.log('Non-Ethereum browser detected. You should consider trying MetaMask!');\n     }\n     console.log('+++++++++++++++++');\n     web3 = new Web3(web3Provider);\n  }\n\n  async componentDidMount() {\n\n    // 请求 账户授权\n    window.addEventListener('load', verify);\n\n    const address = await factory.options.address;\n    console.log(address);\n\n    const accounts = await web3.eth.getAccounts();\n    console.log(accounts);\n\n    const campaign = await factory.methods.getDeployedCampaign().call();\n    console.log(campaign);\n  }\n\n  render() {\n    return <div>hello index </div>;\n  }\n}\n// 导出\nexport default CampaignIndex;\n"]},"metadata":{},"sourceType":"module"}