{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport { Table, Button } from 'semantic-ui-react';\nimport web3 from '../ethereum/web3';\nimport Web3 from 'web3';\nimport Campaign from '../ethereum/campaign';\nimport { Router } from '../routes';\n\nclass RequestRow extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      loading1: false,\n      loading2: false\n    });\n\n    _defineProperty(this, \"onApprove\", async () => {\n      /*\n      var web3Provider;\n      if (window.ethereum) {\n          web3Provider = window.ethereum;\n          try {\n              // 请求 账户授权\n              await window.ethereum.enable();\n              console.log('account access success.');\n          } catch (error) {\n              // 用户不授权时\n              console.error(\"User denied account access\")\n          }\n      }\n      // Legacy dapp browsers...\n      else if (window.web3) {   // 老版本 metamask 账户信息是公开的，2018-11之后，需要授权才能获取账户信息\n          web3Provider = window.web3.currentProvider;\n          console.log('!!!!!!!!!!!!!!!!!');\n      }\n      // Non-dapp browsers...\n      else {\n          console.log('Non-Ethereum browser detected. You should consider trying MetaMask!');\n      }\n      web3 = new Web3(web3Provider);\n       */\n      this.verify();\n      this.setState({\n        loading1: true\n      });\n      const campaign = Campaign(this.props.address);\n      const accounts = await web3.eth.getAccounts();\n      await campaign.methods.approvalRequest(this.props.id).send({\n        from: accounts[0]\n      });\n      Router.replaceRoute(`/campaigns/${this.props.address}/requests`);\n      this.setState({\n        loading1: false\n      });\n    });\n\n    _defineProperty(this, \"onFinalize\", async () => {\n      this.verify();\n      this.setState({\n        loading2: true\n      });\n      const campaign = Campaign(this.props.address);\n      const accounts = await web3.eth.getAccounts();\n      await campaign.methods.finalizeRequest(this.props.id).send({\n        from: accounts[0]\n      });\n      Router.replaceRoute(`/campaigns/${this.props.address}/requests`);\n      this.setState({\n        loading2: false\n      });\n      /*\n         */\n    });\n  }\n\n  async verify() {\n    var web3Provider;\n\n    if (window.ethereum) {\n      web3Provider = window.ethereum;\n\n      try {\n        // 请求 账户授权\n        await window.ethereum.enable();\n        console.log('account access success.');\n      } catch (error) {\n        // 用户不授权时\n        console.error(\"User denied account access\");\n      }\n    } // Legacy dapp browsers...\n    else if (window.web3) {\n        // 老版本 metamask 账户信息是公开的，2018-11之后，需要授权才能获取账户信息\n        web3Provider = window.web3.currentProvider;\n        console.log('!!!!!!!!!!!!!!!!!');\n      } // Non-dapp browsers...\n      else {\n          console.log('Non-Ethereum browser detected. You should consider trying MetaMask!');\n        }\n\n    web3 = new Web3(web3Provider);\n  }\n\n  render() {\n    const {\n      Row,\n      Cell\n    } = Table;\n    const {\n      id,\n      request,\n      approversCount\n    } = this.props;\n    return __jsx(Row, {\n      disabled: request.complete\n    }, __jsx(Cell, null, id), __jsx(Cell, null, request.description), __jsx(Cell, null, web3.utils.fromWei(request.value, 'ether')), __jsx(Cell, null, request.recipients), __jsx(Cell, null, request.approvalCount, \"/\", approversCount), __jsx(Cell, null, __jsx(Button, {\n      disabled: request.complete,\n      color: \"green\",\n      onClick: this.onApprove,\n      loading: this.state.loading1\n    }, \"\\u540C\\u610F\")), __jsx(Cell, null, __jsx(Button, {\n      disabled: request.complete,\n      color: \"teal\",\n      onClick: this.onFinalize,\n      loading: this.state.loading2\n    }, \"\\u5B8C\\u6210\")));\n  }\n\n}\n\nexport default RequestRow;","map":{"version":3,"sources":["/Users/andy/Downloads/exam3/campaign_contract/components/RequestRow.js"],"names":["React","Component","Table","Button","web3","Web3","Campaign","Router","RequestRow","loading1","loading2","verify","setState","campaign","props","address","accounts","eth","getAccounts","methods","approvalRequest","id","send","from","replaceRoute","finalizeRequest","web3Provider","window","ethereum","enable","console","log","error","currentProvider","render","Row","Cell","request","approversCount","complete","description","utils","fromWei","value","recipients","approvalCount","onApprove","state","onFinalize"],"mappings":"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","sourcesContent":["import React,{Component} from 'react';\nimport {Table,Button} from 'semantic-ui-react';\n\nimport web3 from '../ethereum/web3';\nimport Web3 from 'web3';\nimport Campaign from '../ethereum/campaign'\nimport {Router} from '../routes';\n\nclass RequestRow extends Component {\n\n\n  state = {\n    loading1:false,\n    loading2:false,\n  }\n\n  async verify() {\n    var web3Provider;\n    if (window.ethereum) {\n        web3Provider = window.ethereum;\n        try {\n            // 请求 账户授权\n            await window.ethereum.enable();\n            console.log('account access success.');\n        } catch (error) {\n            // 用户不授权时\n            console.error(\"User denied account access\")\n        }\n    }\n    // Legacy dapp browsers...\n    else if (window.web3) {   // 老版本 metamask 账户信息是公开的，2018-11之后，需要授权才能获取账户信息\n        web3Provider = window.web3.currentProvider;\n        console.log('!!!!!!!!!!!!!!!!!');\n    }\n    // Non-dapp browsers...\n    else {\n        console.log('Non-Ethereum browser detected. You should consider trying MetaMask!');\n    }\n    web3 = new Web3(web3Provider);\n  }\n\n  onApprove = async()=> {\n\n    /*\n    var web3Provider;\n    if (window.ethereum) {\n        web3Provider = window.ethereum;\n        try {\n            // 请求 账户授权\n            await window.ethereum.enable();\n            console.log('account access success.');\n        } catch (error) {\n            // 用户不授权时\n            console.error(\"User denied account access\")\n        }\n    }\n    // Legacy dapp browsers...\n    else if (window.web3) {   // 老版本 metamask 账户信息是公开的，2018-11之后，需要授权才能获取账户信息\n        web3Provider = window.web3.currentProvider;\n        console.log('!!!!!!!!!!!!!!!!!');\n    }\n    // Non-dapp browsers...\n    else {\n        console.log('Non-Ethereum browser detected. You should consider trying MetaMask!');\n    }\n    web3 = new Web3(web3Provider);\n\n    */\n\n      this.verify();\n\n      this.setState({loading1:true});\n\n      const campaign = Campaign(this.props.address);\n      const accounts = await web3.eth.getAccounts();\n      await campaign.methods.approvalRequest(this.props.id).send({from:accounts[0]});\n\n      Router.replaceRoute(`/campaigns/${this.props.address}/requests`);\n\n      this.setState({loading1:false});\n\n  }\n\n  onFinalize = async()=> {\n      this.verify();\n\n      this.setState({loading2:true});\n\n      const campaign = Campaign(this.props.address);\n      const accounts = await web3.eth.getAccounts();\n      await campaign.methods.finalizeRequest(this.props.id).send({from:accounts[0]});\n\n      Router.replaceRoute(`/campaigns/${this.props.address}/requests`);\n\n      this.setState({loading2:false});\n\n    /*\n\n\n\n    */\n  }\n\n  render(){\n\n    const {Row,Cell} = Table;\n    const {id,request,approversCount} = this.props;\n\n    return (\n\n      <Row disabled= {request.complete}>\n        <Cell>{id}</Cell>\n        <Cell>{request.description}</Cell>\n        <Cell>{web3.utils.fromWei(request.value,'ether')}</Cell>\n        <Cell>{request.recipients}</Cell>\n        <Cell>{request.approvalCount}/{approversCount}</Cell>\n        <Cell>\n            <Button disabled= {request.complete} color='green' onClick={this.onApprove} loading={this.state.loading1}>同意</Button>\n        </Cell>\n        <Cell>\n            <Button disabled={request.complete} color='teal' onClick={this.onFinalize} loading={this.state.loading2}>完成</Button>\n        </Cell>\n      </Row>\n\n    );\n  }\n\n}\n\nexport default RequestRow;\n"]},"metadata":{},"sourceType":"module"}