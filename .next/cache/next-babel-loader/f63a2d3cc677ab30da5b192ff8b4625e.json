{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport factory from '../ethereum/factory';\nimport { Card, Button } from 'semantic-ui-react';\nimport Layout from '../components/Layout';\nimport web3 from '../ethereum/web3';\nimport Web3 from 'web3'; // export default()=> {\n//   return <h1>next index页面</h1>;\n// }\n\nvar CampaignIndex = /*#__PURE__*/function (_Component) {\n  _inherits(CampaignIndex, _Component);\n\n  var _super = _createSuper(CampaignIndex);\n\n  function CampaignIndex() {\n    var _this;\n\n    _classCallCheck(this, CampaignIndex);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      account: '',\n      list: []\n    });\n\n    return _this;\n  }\n\n  _createClass(CampaignIndex, [{\n    key: \"renderCampaigns\",\n    // 既然在服务器端无法获取 以太坊账户信息，那么依然可以使用 componentDidMount() 在里面使用 window对象 请求账户授权\n    // 缺点，一旦 浏览器禁止了 javascript, 那么该方法就无法使用了\n\n    /*\n    async componentDidMount() {\n       var web3Provider;\n      if (window.ethereum) {\n          web3Provider = window.ethereum;\n          try {\n              // 请求 账户授权\n              await window.ethereum.enable();\n              console.log('account access success.');\n          } catch (error) {\n              // 用户不授权时\n              console.error(\"User denied account access\")\n          }\n      }\n      // Legacy dapp browsers...\n      else if (window.web3) {   // 老版本 metamask 账户信息是公开的，2018-11之后，需要授权才能获取账户信息\n          web3Provider = window.web3.currentProvider;\n          console.log('!!!!!!!!!!!!!!!!!');\n      }\n      // Non-dapp browsers...\n      else {\n          console.log('Non-Ethereum browser detected. You should consider trying MetaMask!');\n      }\n      console.log('+++++++++++++++++');\n      web3 = new Web3(web3Provider);\n       // 请求账户授权，授权完成之后才可以通过  web3.eth.getAccounts() 获取到账户信息\n      const accounts = await web3.eth.getAccounts();\n      console.log(accounts);\n       this.setState({account:accounts[0]});\n    }\n    */\n\n    /*  当浏览器禁止 javascript 之后，console.log() 不会被执行\n      async componentDidMount() {\n    \n        // 请求 账户授权\n        window.addEventListener('load', async () => {\n          var web3Provider;\n           // Modern dapp browsers...\n           if (window.ethereum) {\n               web3Provider = window.ethereum;\n               try {\n                   // 请求 账户授权\n                   await window.ethereum.enable();\n                   console.log('account access success.');\n               } catch (error) {\n                   // 用户不授权时\n                   console.error(\"User denied account access\")\n               }\n           }\n           // Legacy dapp browsers...\n           else if (window.web3) {   // 老版本 metamask 账户信息是公开的，2018-11之后，需要授权才能获取账户信息\n               web3Provider = window.web3.currentProvider;\n               console.log('!!!!!!!!!!!!!!!!!');\n           }\n           // Non-dapp browsers...\n           else {\n               console.log('Non-Ethereum browser detected. You should consider trying MetaMask!');\n           }\n           console.log('+++++++++++++++++');\n           web3 = new Web3(web3Provider);\n        });\n    \n        const address = await factory.options.address;\n        console.log(address);\n    \n        // 请求账户授权，授权完成之后才可以通过  web3.eth.getAccounts() 获取到账户信息\n        const accounts = await web3.eth.getAccounts();\n        console.log(accounts);\n    \n        const campaign = await factory.methods.getDeployedCampaign().call();\n        console.log(campaign);\n      }\n    */\n    value: function renderCampaigns() {\n      // console.log(this.props.camDesc);\n      if (this.props.list.length > 0) {\n        var items = this.props.list.map(function (item, index) {\n          return {\n            header: item.address,\n            description: item.desc,\n            meta: __jsx(\"a\", null, \"\\u67E5\\u770B\\u4F17\\u7B79\"),\n            fluid: true\n          };\n        });\n        return __jsx(Card.Group, {\n          items: items\n        });\n      } else {\n        console.log(\"no campaign\");\n        var _items = [{\n          header: '无众筹项目'\n        }];\n        return __jsx(Card.Group, {\n          items: _items\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(Layout, null, __jsx(\"div\", null, __jsx(\"h3\", null, \"\\u4F17\\u7B79\\u5217\\u8868\"), __jsx(Button, {\n        floated: \"right\",\n        content: \"\\u521B\\u5EFA\\u4F17\\u7B79\",\n        icon: \"add circle\",\n        labelPosition: \"left\",\n        primary: true\n      }), this.renderCampaigns()));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    // next 框架中预处理函数(在服务器端预处理，返回结果，供前端调用)\n    // 缺点：无法使用 window 对象\n    // 注意：console.log() 既然是 服务器端处理，所以打印信息是在服务器端的 终端窗口，而不是 浏览器终端\n    value: function () {\n      var _getInitialProps = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var campaigns, list;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return factory.methods.getDeployedCampaign().call();\n\n              case 2:\n                campaigns = _context2.sent;\n                console.log(campaigns);\n                list = [];\n                campaigns.forEach( /*#__PURE__*/function () {\n                  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(address, i) {\n                    var desc, item;\n                    return _regeneratorRuntime.wrap(function _callee$(_context) {\n                      while (1) {\n                        switch (_context.prev = _context.next) {\n                          case 0:\n                            console.log(\"address : \", address);\n                            _context.next = 3;\n                            return factory.methods.campaignMap(address).call();\n\n                          case 3:\n                            desc = _context.sent;\n                            console.log(\"desc : \", desc);\n                            item = {\n                              address: address,\n                              desc: desc\n                            };\n                            list.push(item);\n                            console.log(\"+++++++list.length : \", list.length);\n\n                          case 8:\n                          case \"end\":\n                            return _context.stop();\n                        }\n                      }\n                    }, _callee);\n                  }));\n\n                  return function (_x, _x2) {\n                    return _ref.apply(this, arguments);\n                  };\n                }());\n                /*\n                const camDesc = await Promise.all (\n                    Array(campaigns.length).fill().map((element,index)=>{\n                   //  console.log(\"--------\",this.props.address);\n                     return factory.methods.campaignMap(\"0x98fFC345da842d88134C29A5400fd85De438Bb55\").call();\n                  })\n                )\n                */\n\n                /*\n                const campaigns = await Promise.all (\n                  Array(campaignsCount).fill().map((element,index)=>{\n                    return factory.methods.deployedCampaign(index).call();\n                  })\n                )\n                console.log(campaigns);\n                */\n\n                console.log(\"-----list.length : \", list.length);\n                return _context2.abrupt(\"return\", {\n                  list: list\n                });\n\n              case 8:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function getInitialProps() {\n        return _getInitialProps.apply(this, arguments);\n      }\n\n      return getInitialProps;\n    }()\n  }]);\n\n  return CampaignIndex;\n}(Component); // 导出\n\n\nexport default CampaignIndex;","map":{"version":3,"sources":["/Users/andy/Downloads/exam3/campaign_contract/pages/index.js"],"names":["React","Component","factory","Card","Button","Layout","web3","Web3","CampaignIndex","account","list","props","length","items","map","item","index","header","address","description","desc","meta","fluid","console","log","renderCampaigns","methods","getDeployedCampaign","call","campaigns","forEach","i","campaignMap","push"],"mappings":"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","sourcesContent":["import React,{Component} from 'react';\nimport factory from '../ethereum/factory';\nimport {Card,Button} from 'semantic-ui-react';\n\nimport Layout from '../components/Layout';\nimport web3 from '../ethereum/web3';\n\nimport Web3 from 'web3';\n// export default()=> {\n//   return <h1>next index页面</h1>;\n// }\n\n\nclass CampaignIndex extends Component {\n\n  state = {\n    account:'',\n    list:[],\n  }\n\n  // next 框架中预处理函数(在服务器端预处理，返回结果，供前端调用)\n  // 缺点：无法使用 window 对象\n  // 注意：console.log() 既然是 服务器端处理，所以打印信息是在服务器端的 终端窗口，而不是 浏览器终端\n  static async getInitialProps() {\n\n    // const address = await factory.options.address;\n    // console.log(address);\n\n    const campaigns = await factory.methods.getDeployedCampaign().call();\n    console.log(campaigns);\n\n    let list = [];\n    campaigns.forEach(async  (address, i) => {\n      console.log(\"address : \",address);\n\n      const desc = await factory.methods.campaignMap(address).call();\n      console.log(\"desc : \", desc);\n      const item = {\n        address : address,\n        desc: desc,\n      }\n      list.push(item);\n      console.log(\"+++++++list.length : \", list.length);\n    });\n\n    /*\n    const camDesc = await Promise.all (\n        Array(campaigns.length).fill().map((element,index)=>{\n\n      //  console.log(\"--------\",this.props.address);\n\n        return factory.methods.campaignMap(\"0x98fFC345da842d88134C29A5400fd85De438Bb55\").call();\n      })\n    )\n    */\n\n    /*\n    const campaigns = await Promise.all (\n      Array(campaignsCount).fill().map((element,index)=>{\n        return factory.methods.deployedCampaign(index).call();\n      })\n    )\n    console.log(campaigns);\n    */\n\n    console.log(\"-----list.length : \", list.length);\n\n    return {list};   // {} 一定要有\n\n  }\n\n  // 既然在服务器端无法获取 以太坊账户信息，那么依然可以使用 componentDidMount() 在里面使用 window对象 请求账户授权\n  // 缺点，一旦 浏览器禁止了 javascript, 那么该方法就无法使用了\n  /*\n  async componentDidMount() {\n\n    var web3Provider;\n    if (window.ethereum) {\n        web3Provider = window.ethereum;\n        try {\n            // 请求 账户授权\n            await window.ethereum.enable();\n            console.log('account access success.');\n        } catch (error) {\n            // 用户不授权时\n            console.error(\"User denied account access\")\n        }\n    }\n    // Legacy dapp browsers...\n    else if (window.web3) {   // 老版本 metamask 账户信息是公开的，2018-11之后，需要授权才能获取账户信息\n        web3Provider = window.web3.currentProvider;\n        console.log('!!!!!!!!!!!!!!!!!');\n    }\n    // Non-dapp browsers...\n    else {\n        console.log('Non-Ethereum browser detected. You should consider trying MetaMask!');\n    }\n    console.log('+++++++++++++++++');\n    web3 = new Web3(web3Provider);\n\n    // 请求账户授权，授权完成之后才可以通过  web3.eth.getAccounts() 获取到账户信息\n    const accounts = await web3.eth.getAccounts();\n    console.log(accounts);\n\n    this.setState({account:accounts[0]});\n  }\n  */\n\n\n/*  当浏览器禁止 javascript 之后，console.log() 不会被执行\n  async componentDidMount() {\n\n    // 请求 账户授权\n    window.addEventListener('load', async () => {\n      var web3Provider;\n       // Modern dapp browsers...\n       if (window.ethereum) {\n           web3Provider = window.ethereum;\n           try {\n               // 请求 账户授权\n               await window.ethereum.enable();\n               console.log('account access success.');\n           } catch (error) {\n               // 用户不授权时\n               console.error(\"User denied account access\")\n           }\n       }\n       // Legacy dapp browsers...\n       else if (window.web3) {   // 老版本 metamask 账户信息是公开的，2018-11之后，需要授权才能获取账户信息\n           web3Provider = window.web3.currentProvider;\n           console.log('!!!!!!!!!!!!!!!!!');\n       }\n       // Non-dapp browsers...\n       else {\n           console.log('Non-Ethereum browser detected. You should consider trying MetaMask!');\n       }\n       console.log('+++++++++++++++++');\n       web3 = new Web3(web3Provider);\n    });\n\n    const address = await factory.options.address;\n    console.log(address);\n\n    // 请求账户授权，授权完成之后才可以通过  web3.eth.getAccounts() 获取到账户信息\n    const accounts = await web3.eth.getAccounts();\n    console.log(accounts);\n\n    const campaign = await factory.methods.getDeployedCampaign().call();\n    console.log(campaign);\n  }\n*/\n\n  renderCampaigns(){\n    // console.log(this.props.camDesc);\n    if (this.props.list.length > 0 ){\n      const items = this.props.list.map((item,index)=>{\n\n        return {\n          header: item.address,\n          description :item.desc,\n          meta: <a>查看众筹</a>,\n          fluid:true\n        }\n      });\n      return <Card.Group items={items} />;\n    }else {\n      console.log(\"no campaign\");\n      const items = [\n        {\n          header: '无众筹项目',\n        },\n      ]\n      return <Card.Group items={items} />;\n    }\n\n  }\n\n  render() {\n    return (\n      <Layout>\n      <div>\n        <h3>众筹列表</h3>\n        <Button floated='right' content='创建众筹' icon='add circle' labelPosition='left' primary/>\n        {this.renderCampaigns()}\n      </div>\n      </Layout>\n    );\n  }\n}\n// 导出\nexport default CampaignIndex;\n"]},"metadata":{},"sourceType":"module"}