{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"/Users/andy/Downloads/exam3/campaign_contract/pages/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport react, { Component } from 'react';\nimport factory from '../ethereum/factory';\nimport web3 from '../ethereum/web3';\nimport Web3 from 'web3'; // export default()=> {\n//   return <h1>next index页面</h1>;\n// }\n\nvar CampaignIndex = /*#__PURE__*/function (_Component) {\n  _inherits(CampaignIndex, _Component);\n\n  var _super = _createSuper(CampaignIndex);\n\n  function CampaignIndex() {\n    _classCallCheck(this, CampaignIndex);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(CampaignIndex, [{\n    key: \"render\",\n\n    /*  当浏览器禁止 javascript 之后，console.log() 不会被执行\n      async componentDidMount() {\n    \n        // 请求 账户授权\n        window.addEventListener('load', async () => {\n          var web3Provider;\n           // Modern dapp browsers...\n           if (window.ethereum) {\n               web3Provider = window.ethereum;\n               try {\n                   // 请求 账户授权\n                   await window.ethereum.enable();\n                   console.log('account access success.');\n               } catch (error) {\n                   // 用户不授权时\n                   console.error(\"User denied account access\")\n               }\n           }\n           // Legacy dapp browsers...\n           else if (window.web3) {   // 老版本 metamask 账户信息是公开的，2018-11之后，需要授权才能获取账户信息\n               web3Provider = window.web3.currentProvider;\n               console.log('!!!!!!!!!!!!!!!!!');\n           }\n           // Non-dapp browsers...\n           else {\n               console.log('Non-Ethereum browser detected. You should consider trying MetaMask!');\n           }\n           console.log('+++++++++++++++++');\n           web3 = new Web3(web3Provider);\n        });\n    \n        const address = await factory.options.address;\n        console.log(address);\n    \n        // 请求账户授权，授权完成之后才可以通过  web3.eth.getAccounts() 获取到账户信息\n        const accounts = await web3.eth.getAccounts();\n        console.log(accounts);\n    \n        const campaign = await factory.methods.getDeployedCampaign().call();\n        console.log(campaign);\n      }\n    */\n    // {this.props.campaign[0]}\n    value: function render() {\n      return __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 12\n        }\n      }, \"hello index: campaign address : \", this.props.accounts[0]);\n    }\n  }], [{\n    key: \"getInitialProps\",\n    // 无法使用 window 对象\n    value: function () {\n      var _getInitialProps = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var address, accounts, campaign;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return factory.options.address;\n\n              case 2:\n                address = _context.sent;\n                console.log(address); // 请求账户授权，授权完成之后才可以通过  web3.eth.getAccounts() 获取到账户信息\n\n                _context.next = 6;\n                return web3.eth.getAccounts();\n\n              case 6:\n                accounts = _context.sent;\n                console.log(accounts);\n                _context.next = 10;\n                return factory.methods.getDeployedCampaign().call();\n\n              case 10:\n                campaign = _context.sent;\n                console.log(campaign);\n                return _context.abrupt(\"return\", accounts);\n\n              case 13:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function getInitialProps() {\n        return _getInitialProps.apply(this, arguments);\n      }\n\n      return getInitialProps;\n    }()\n  }]);\n\n  return CampaignIndex;\n}(Component); // 导出\n\n\nexport default CampaignIndex;","map":{"version":3,"sources":["/Users/andy/Downloads/exam3/campaign_contract/pages/index.js"],"names":["react","Component","factory","web3","Web3","CampaignIndex","props","accounts","options","address","console","log","eth","getAccounts","methods","getDeployedCampaign","call","campaign"],"mappings":";;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B;AACA,OAAOC,OAAP,MAAoB,qBAApB;AACA,OAAOC,IAAP,MAAiB,kBAAjB;AAEA,OAAOC,IAAP,MAAiB,MAAjB,C,CACA;AACA;AACA;;IAEMC,a;;;;;;;;;;;;;;AAoBN;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2CE;6BACS;AACP,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAAsC,KAAKC,KAAL,CAAWC,QAAX,CAAoB,CAApB,CAAtC,CAAP;AACD;;;AA/DD;;;;;;;;;uBAGwBL,OAAO,CAACM,OAAR,CAAgBC,O;;;AAAhCA,gBAAAA,O;AACNC,gBAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ,E,CAEA;;;uBACuBN,IAAI,CAACS,GAAL,CAASC,WAAT,E;;;AAAjBN,gBAAAA,Q;AACNG,gBAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAZ;;uBAEuBL,OAAO,CAACY,OAAR,CAAgBC,mBAAhB,GAAsCC,IAAtC,E;;;AAAjBC,gBAAAA,Q;AACNP,gBAAAA,OAAO,CAACC,GAAR,CAAYM,QAAZ;iDAEOV,Q;;;;;;;;;;;;;;;;;;;EAhBiBN,S,GAoE5B;;;AACA,eAAeI,aAAf","sourcesContent":["import react,{Component} from 'react';\nimport factory from '../ethereum/factory';\nimport web3 from '../ethereum/web3';\n\nimport Web3 from 'web3';\n// export default()=> {\n//   return <h1>next index页面</h1>;\n// }\n\nclass CampaignIndex extends Component {\n\n\n  // 无法使用 window 对象\n  static async getInitialProps() {\n\n    const address = await factory.options.address;\n    console.log(address);\n\n    // 请求账户授权，授权完成之后才可以通过  web3.eth.getAccounts() 获取到账户信息\n    const accounts = await web3.eth.getAccounts();\n    console.log(accounts);\n\n    const campaign = await factory.methods.getDeployedCampaign().call();\n    console.log(campaign);\n\n    return accounts;\n  }\n\n\n/*  当浏览器禁止 javascript 之后，console.log() 不会被执行\n  async componentDidMount() {\n\n    // 请求 账户授权\n    window.addEventListener('load', async () => {\n      var web3Provider;\n       // Modern dapp browsers...\n       if (window.ethereum) {\n           web3Provider = window.ethereum;\n           try {\n               // 请求 账户授权\n               await window.ethereum.enable();\n               console.log('account access success.');\n           } catch (error) {\n               // 用户不授权时\n               console.error(\"User denied account access\")\n           }\n       }\n       // Legacy dapp browsers...\n       else if (window.web3) {   // 老版本 metamask 账户信息是公开的，2018-11之后，需要授权才能获取账户信息\n           web3Provider = window.web3.currentProvider;\n           console.log('!!!!!!!!!!!!!!!!!');\n       }\n       // Non-dapp browsers...\n       else {\n           console.log('Non-Ethereum browser detected. You should consider trying MetaMask!');\n       }\n       console.log('+++++++++++++++++');\n       web3 = new Web3(web3Provider);\n    });\n\n    const address = await factory.options.address;\n    console.log(address);\n\n    // 请求账户授权，授权完成之后才可以通过  web3.eth.getAccounts() 获取到账户信息\n    const accounts = await web3.eth.getAccounts();\n    console.log(accounts);\n\n    const campaign = await factory.methods.getDeployedCampaign().call();\n    console.log(campaign);\n  }\n*/\n\n  // {this.props.campaign[0]}\n  render() {\n    return <div>hello index: campaign address : {this.props.accounts[0]}</div>;\n  }\n}\n// 导出\nexport default CampaignIndex;\n"]},"metadata":{},"sourceType":"module"}