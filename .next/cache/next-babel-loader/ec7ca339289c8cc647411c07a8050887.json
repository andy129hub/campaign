{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport { Table, Button } from 'semantic-ui-react';\nimport web3 from '../ethereum/web3';\nimport Web3 from 'web3';\nimport Campaign from '../ethereum/campaign';\nimport { Router } from '../../../routes';\n\nvar RequestRow = /*#__PURE__*/function (_Component) {\n  _inherits(RequestRow, _Component);\n\n  var _super = _createSuper(RequestRow);\n\n  function RequestRow() {\n    var _this;\n\n    _classCallCheck(this, RequestRow);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"onApprove\", /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var campaign, accounts;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              /*\n              var web3Provider;\n              if (window.ethereum) {\n                  web3Provider = window.ethereum;\n                  try {\n                      // 请求 账户授权\n                      await window.ethereum.enable();\n                      console.log('account access success.');\n                  } catch (error) {\n                      // 用户不授权时\n                      console.error(\"User denied account access\")\n                  }\n              }\n              // Legacy dapp browsers...\n              else if (window.web3) {   // 老版本 metamask 账户信息是公开的，2018-11之后，需要授权才能获取账户信息\n                  web3Provider = window.web3.currentProvider;\n                  console.log('!!!!!!!!!!!!!!!!!');\n              }\n              // Non-dapp browsers...\n              else {\n                  console.log('Non-Ethereum browser detected. You should consider trying MetaMask!');\n              }\n              web3 = new Web3(web3Provider);\n               */\n              _this.verify();\n\n              campaign = Campaign(_this.props.address);\n              _context.next = 4;\n              return web3.eth.getAccounts();\n\n            case 4:\n              accounts = _context.sent;\n              _context.next = 7;\n              return campaign.methods.approvalRequest(_this.props.id).send({\n                from: accounts[0]\n              });\n\n            case 7:\n              Router.replaceRoute(\"/campaigns/\".concat(_this.props.address, \"/requests\"));\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    })));\n\n    _defineProperty(_assertThisInitialized(_this), \"onFinalize\", /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var campaign, accounts;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _this.verify();\n\n              campaign = Campaign(_this.props.address);\n              _context2.next = 4;\n              return web3.eth.getAccounts();\n\n            case 4:\n              accounts = _context2.sent;\n              _context2.next = 7;\n              return campaign.methods.finalizeRequest(_this.props.id).send({\n                from: accounts[0]\n              });\n\n            case 7:\n              Router.replaceRoute(\"/campaigns/\".concat(_this.props.address, \"/requests\"));\n\n            case 8:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    })));\n\n    return _this;\n  }\n\n  _createClass(RequestRow, [{\n    key: \"verify\",\n    value: function () {\n      var _verify = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        var web3Provider;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                if (!window.ethereum) {\n                  _context3.next = 13;\n                  break;\n                }\n\n                web3Provider = window.ethereum;\n                _context3.prev = 2;\n                _context3.next = 5;\n                return window.ethereum.enable();\n\n              case 5:\n                console.log('account access success.');\n                _context3.next = 11;\n                break;\n\n              case 8:\n                _context3.prev = 8;\n                _context3.t0 = _context3[\"catch\"](2);\n                // 用户不授权时\n                console.error(\"User denied account access\");\n\n              case 11:\n                _context3.next = 14;\n                break;\n\n              case 13:\n                // Legacy dapp browsers...\n                if (window.web3) {\n                  // 老版本 metamask 账户信息是公开的，2018-11之后，需要授权才能获取账户信息\n                  web3Provider = window.web3.currentProvider;\n                  console.log('!!!!!!!!!!!!!!!!!');\n                } // Non-dapp browsers...\n                else {\n                    console.log('Non-Ethereum browser detected. You should consider trying MetaMask!');\n                  }\n\n              case 14:\n                web3 = new Web3(web3Provider);\n\n              case 15:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, null, [[2, 8]]);\n      }));\n\n      function verify() {\n        return _verify.apply(this, arguments);\n      }\n\n      return verify;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var Row = Table.Row,\n          Cell = Table.Cell;\n      var _this$props = this.props,\n          id = _this$props.id,\n          request = _this$props.request,\n          approversCount = _this$props.approversCount;\n      return __jsx(Row, null, __jsx(Cell, null, id), __jsx(Cell, null, request.description), __jsx(Cell, null, web3.utils.fromWei(request.value, 'ether')), __jsx(Cell, null, request.recipients), __jsx(Cell, null, request.approvalCount, \"/\", approversCount), __jsx(Cell, null, __jsx(Button, {\n        color: \"green\",\n        onClick: this.onApprove\n      }, \"\\u540C\\u610F\")), __jsx(Cell, null, __jsx(Button, {\n        color: \"green\",\n        onClick: this.onFinalize\n      }, \"\\u5B8C\\u6210\")));\n    }\n  }]);\n\n  return RequestRow;\n}(Component);\n\nexport default RequestRow;","map":{"version":3,"sources":["/Users/andy/Downloads/exam3/campaign_contract/components/RequestRow.js"],"names":["React","Component","Table","Button","web3","Web3","Campaign","Router","RequestRow","verify","campaign","props","address","eth","getAccounts","accounts","methods","approvalRequest","id","send","from","replaceRoute","finalizeRequest","window","ethereum","web3Provider","enable","console","log","error","currentProvider","Row","Cell","request","approversCount","description","utils","fromWei","value","recipients","approvalCount","onApprove","onFinalize"],"mappings":"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","sourcesContent":["import React,{Component} from 'react';\nimport {Table,Button} from 'semantic-ui-react';\n\nimport web3 from '../ethereum/web3';\nimport Web3 from 'web3';\nimport Campaign from '../ethereum/campaign'\nimport {Router} from '../../../routes';\n\nclass RequestRow extends Component {\n\n\n  async verify() {\n    var web3Provider;\n    if (window.ethereum) {\n        web3Provider = window.ethereum;\n        try {\n            // 请求 账户授权\n            await window.ethereum.enable();\n            console.log('account access success.');\n        } catch (error) {\n            // 用户不授权时\n            console.error(\"User denied account access\")\n        }\n    }\n    // Legacy dapp browsers...\n    else if (window.web3) {   // 老版本 metamask 账户信息是公开的，2018-11之后，需要授权才能获取账户信息\n        web3Provider = window.web3.currentProvider;\n        console.log('!!!!!!!!!!!!!!!!!');\n    }\n    // Non-dapp browsers...\n    else {\n        console.log('Non-Ethereum browser detected. You should consider trying MetaMask!');\n    }\n    web3 = new Web3(web3Provider);\n  }\n\n  onApprove = async()=> {\n\n    /*\n    var web3Provider;\n    if (window.ethereum) {\n        web3Provider = window.ethereum;\n        try {\n            // 请求 账户授权\n            await window.ethereum.enable();\n            console.log('account access success.');\n        } catch (error) {\n            // 用户不授权时\n            console.error(\"User denied account access\")\n        }\n    }\n    // Legacy dapp browsers...\n    else if (window.web3) {   // 老版本 metamask 账户信息是公开的，2018-11之后，需要授权才能获取账户信息\n        web3Provider = window.web3.currentProvider;\n        console.log('!!!!!!!!!!!!!!!!!');\n    }\n    // Non-dapp browsers...\n    else {\n        console.log('Non-Ethereum browser detected. You should consider trying MetaMask!');\n    }\n    web3 = new Web3(web3Provider);\n\n    */\n\n      this.verify();\n\n      const campaign = Campaign(this.props.address);\n      const accounts = await web3.eth.getAccounts();\n      await campaign.methods.approvalRequest(this.props.id).send({from:accounts[0]});\n\n      Router.replaceRoute(`/campaigns/${this.props.address}/requests`);\n\n  }\n\n  onFinalize = async()=> {\n      this.verify();\n\n      const campaign = Campaign(this.props.address);\n      const accounts = await web3.eth.getAccounts();\n      await campaign.methods.finalizeRequest(this.props.id).send({from:accounts[0]});\n\n      Router.replaceRoute(`/campaigns/${this.props.address}/requests`);\n  }\n\n  render(){\n\n    const {Row,Cell} = Table;\n    const {id,request,approversCount} = this.props;\n\n    return (\n\n      <Row>\n        <Cell>{id}</Cell>\n        <Cell>{request.description}</Cell>\n        <Cell>{web3.utils.fromWei(request.value,'ether')}</Cell>\n        <Cell>{request.recipients}</Cell>\n        <Cell>{request.approvalCount}/{approversCount}</Cell>\n        <Cell>\n            <Button color='green' onClick={this.onApprove}>同意</Button>\n        </Cell>\n        <Cell>\n            <Button color='green' onClick={this.onFinalize}>完成</Button>\n        </Cell>\n      </Row>\n\n    );\n  }\n\n}\n\nexport default RequestRow;\n"]},"metadata":{},"sourceType":"module"}